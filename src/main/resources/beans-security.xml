<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	<context:annotation-config />
	<!-- <context:component-scan base-package="com.kverchi.service" /> -->
	<http  auto-config="true" use-expressions="true" access-denied-page="/main/denied"> 
	    <form-login 
	    	login-page="/main/Login"
	    	authentication-failure-url="/main/Login?failed=true"
	    	default-target-url="/main/home"/>
	    <remember-me/>
	    <logout logout-success-url="/main/main" delete-cookies="JSESSIONID"/>
   		<intercept-url pattern="/main/home" access="hasRole('user')"/>
   		<intercept-url pattern="/main/country" access="hasRole('user')"/>
   		<intercept-url pattern="/main/posts/*" access="hasRole('user')"/>
   		<intercept-url pattern="/main/Login" access="isAnonymous()" requires-channel="https"/>
   		<intercept-url pattern="/main/signUp" access="isAnonymous()"/>
   		<intercept-url pattern="/main/result" access="permitAll"/>
   		<intercept-url pattern="/main/denied" access="permitAll"/>
	</http>
	<!-- <global-method-security pre-post-annotations="enabled" /> -->
	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	<authentication-manager alias="authenticationManager">
		<authentication-provider>
		 <jdbc-user-service data-source-ref="dataSource"
		   users-by-username-query="
		     SELECT username, password, enabled
		     FROM users
		     WHERE username=?;"
 
 		   authorities-by-username-query="
		    SELECT users.username, role.rolename FROM users, role, user_role
			WHERE user_role.role_id = role.role_id 
			AND user_role.username = users.username
			AND user_role.username = ?;"/>	
		  <password-encoder ref="passwordEncoder">
				<!-- <salt-source ref="saltSource" /> -->
		  </password-encoder>
		</authentication-provider>
	</authentication-manager>
</beans:beans>